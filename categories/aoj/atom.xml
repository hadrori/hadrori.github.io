<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AOJ | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/categories/aoj/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2328 Mobile Network]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2328/"/>
    <updated>2015-05-12T23:09:33+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2328</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2328">Mobile Network</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>容量がx&gt;=0で単調非減少なxについての多項式のグラフが与えられる． 
頂点1から頂点nへの最大流を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>多項式の比較は問題に書いてない気がするけどxが十分に大きな値をとったときの多項式の値で比較，つまり次数が大きい方から係数を比較して通った．<br />
あとはそれで最大流を求めるだけ．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2328.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2294 Entangled with Lottery]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2294/"/>
    <updated>2015-05-12T22:53:37+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2294</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2294">Entangled with Lottery</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>高さHのN本の縦棒からなるあみだくじがある．1以上H以下の整数の高さにそれぞれ1本まで隣り合った縦棒をつなぐ横棒を置ける．<br />
現在M本の横棒が置かれている．ここにさらに上記の条件を満たすようにランダムにK本の横棒を置く．<br />
左からP本目の下端が当たりの時，最も当たる確率が高くなるようにスタートを選んだ時の当たる確率を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>ある開始位置を決めた時，下端の各位置にたどり着く確率は以下のDPでもとまる．<br />
dp[i][k][j] := 高さiでこれまでにk本設置して，左からj番目にいるときの確率<br />
更新は，すでにその高さに横棒があるなら対応する位置の確率をswap．<br />
そうでないなら，それ以降でその高さが選ばれる確率は (K-k)/(残りの設置されてない高さの数)．<br />
その高さで各位置に設置される確率はさらに 1/(N-1)<br />
よってこの2通り*2通りの遷移をすればよい．<br />
このDPの計算量はO(NHK)</p>

<p>どの開始位置がPにたどり着く最大の確率を取るかすべて試すのはちょっと危うそう(メモ化再帰とか定数倍高速化を頑張ればいける？)．<br />
あみだくじの性質として，上から下へ辿る時の経路と下から上への経路は同じ．<br />
つまりあみだくじをひっくり返して下端のPから上端の各位置への到達確率のうち最大のものを持って来ればよい．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2294.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2598 Website Tour]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2598/"/>
    <updated>2015-05-07T22:38:14+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2598</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2598">Website Tour</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>有向グラフ上のノードiでコスト{% m %}t_i{% em %}でポイント{% m %}p_i{% em %}が手に入る．<br />
ノードiでポイントが得られるのは{% m %}k_i{% em %}回まで．ただし同じノードでポイントを得るには1回以上の遷移が必要．<br />
コストの総和がT以内で得られるポイントの総和の最大を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>入力のグラフGを強連結成分分解する．各強連結成分を1つのノードとしたDAG(これをHとする)上でDPする．</p>

<p>dp[i][j] := 強連結成分iでコストj以下の時の最大の総ポイント</p>

<p>Hのノードはトポロジカルソートし，順にやればよい．<br />
Hの各ノードでの計算は個数制限ナップサックをすればよい．Hでのノードからノードへの遷移は各コストでのdp表のmaxをとる．<br />
ただしノードがGのノードを1つしか含まず，そのノードも自己ループを持たないときは1回しかそこを通れないので01ナップサック(個数制限を1にしたナップサック)をやる．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2598.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1242 Area of Polygons]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1242/"/>
    <updated>2015-05-06T12:44:07+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1242</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1242">Area of Polygons</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>頂点が格子点上にある多角形が与えられる．<br />
多角形が通るマスと多角形に含まれるマスの数を答えよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>y軸に平行な太さが1マス分の走査線で平面走査する．<br />
各線分から現在見てる区間を切り取って，左側のx座標でソートする．<br />
あとは足される区間と足さない区間が交互にくるので足してやればいい．<br />
y軸に平行な線分は無視．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1242.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2236 Rabbit Plays Games!]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2236/"/>
    <updated>2015-04-30T14:06:26+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2236</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2236">Rabbit Plays Games!</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>自分とn体の敵がいる．<br />
それぞれHP，攻撃力，防御力，素早さのステータスをもつ．<br />
それぞれ素早さが高い順に攻撃できる．<br />
攻撃力がaのキャラが防御力dのキャラに攻撃して与えるダメージはmax(0,a-d)である．<br />
自分が受けるダメージの最小を答えよ．<br />
ただしそれが自分のHPより大きい場合は-1を出力せよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>倒していく順番を考える．<br />
敵iを倒すのにかかるターン数をAi, 1回あたり食らうダメージをBiとする．<br />
敵iを倒して，敵jを残す時，敵jから食らうダメージがAi*Bjだけ増える．<br />
逆の順ならAj*Biだけ増える．<br />
この増加量の大小関係は推移する．<br />
これは各値は正とすれば<br />
Ai*Bj &lt; Aj*Bi<br />
なら両辺をBi，Bjで割れば<br />
Ai/Bi &lt; Aj/Bj<br />
となり明らか．<br />
これが小さくなる順に倒せば良い．</p>

<p>ただし，自分が相手にダメージを与えられない場合と，相手が自分にダメージを与えられない場合に留意すること．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2236.cpp %}</p>
]]></content>
  </entry>
  
</feed>
