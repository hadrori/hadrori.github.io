<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ProjectEuler | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/categories/projecteuler/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2016-08-11T23:37:46+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Project Euler 104 Pandigital Fibonacci ends]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/104/"/>
    <updated>2016-08-11T14:30:57+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/104</id>
    <content type="html"><![CDATA[<p><a href="https://projecteuler.net/problem=104">Pandigital Fibonacci ends</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>桁が爆発するので愚直にやると遅い．<br />
下9桁はmod 10^9で計算してpandigitalかチェックする．<br />
ここで，第n項のフィボナッチ数は以下の式で出せる</p>

<p><script type="math/tex; mode=display">
\phi = \frac{1+\sqrt{5}}{2}
F_{n} = \lfloor \frac{\phi^n}{\sqrt{5}} + \frac{1}{2} \rfloor
</script></p>

<p>10を底としてlogを取ると</p>

<p><script type="math/tex; mode=display">
\log_{10} F_{n} = n \log_{10} \phi - \frac{1}{2}\log_{10} 5
</script></p>

<p>10のe乗の桁数はe+1になるのは明らか．<br />
つまり以下のように <script type="math/tex"> \log_{10} F_{n} </script> の整数部分を8にしてフィボナッチ数の上位9桁を取ればよい．
<script type="math/tex; mode=display">
\lfloor 10^{\log_{10} F_{n} - \lfloor \log_{10} F_{n} \rfloor + 8} \rfloor
</script></p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (104.cpp)</span> <a href='/downloads/code/PE/104.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;bits/stdc++.h&quot;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define reps(i,a,b,s) for(int i=(int)(a);i&lt;(int)(b);i+=s)</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i=(int)(a);i&lt;(int)(b);i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'><span class="k">using</span> <span class="n">i64</span> <span class="o">=</span> <span class="kt">int64_t</span><span class="p">;</span>
</span><span class='line'><span class="kt">bool</span> <span class="n">check</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="nf">pand</span><span class="p">(</span><span class="n">i64</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">check</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">check</span><span class="p">));</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">9</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">check</span><span class="p">[</span><span class="n">x</span><span class="o">%</span><span class="mi">10</span><span class="p">]</span> <span class="n">or</span> <span class="n">x</span><span class="o">%</span><span class="mi">10</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">check</span><span class="p">[</span><span class="n">x</span><span class="o">%</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">/=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">mod</span> <span class="o">=</span> <span class="mf">1e9</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">long</span> <span class="kt">double</span> <span class="n">phi</span> <span class="o">=</span> <span class="n">log10</span><span class="p">(</span><span class="mf">1.0</span><span class="o">+</span><span class="n">sqrt</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span><span class="o">-</span><span class="n">log10</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="n">d</span> <span class="o">=</span> <span class="n">log10</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">i64</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">)</span> <span class="o">%</span> <span class="n">mod</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">pand</span><span class="p">(</span><span class="n">c</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">const</span> <span class="kt">long</span> <span class="kt">double</span> <span class="n">lf</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="n">phi</span> <span class="o">-</span> <span class="n">d</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">pand</span><span class="p">(</span><span class="n">pow</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="n">lf</span> <span class="o">-</span> <span class="n">floor</span><span class="p">(</span><span class="n">lf</span><span class="p">)</span> <span class="o">+</span> <span class="mi">8</span><span class="p">)))</span> <span class="k">return</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span> <span class="n">b</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">solve</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler 88 Product-sum numbers]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/88/"/>
    <updated>2016-08-08T20:53:59+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/88</id>
    <content type="html"><![CDATA[<p><a href="https://projecteuler.net/problem=88">Product-sum numbers</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>1以外の部分の和をs，積をp，長さをlとするとp-s+lが1を含む全体の長さとなる．<br />
この値は，数列に2以上の値を追加するたびに単調に増加していく．<br />
つまりこの値が12000を越えない範囲で2以上の値を追加しながら探索していけばよい．<br />
積と和の差なんてすぐ大きくなるので，探索する空間はそんなに大きくない．</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (88.cpp)</span> <a href='/downloads/code/PE/88.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;bits/stdc++.h&quot;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define reps(i,a,b,s) for(int i=(int)(a);i&lt;(int)(b);i+=s)</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i=(int)(a);i&lt;(int)(b);i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'><span class="kr">inline</span> <span class="kt">void</span> <span class="nf">chmin</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="k">using</span> <span class="n">i64</span> <span class="o">=</span> <span class="kt">int64_t</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">inf</span> <span class="o">=</span> <span class="mf">1e9</span><span class="p">,</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">12000</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">ans</span><span class="p">[</span><span class="n">N</span><span class="o">+</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="kt">int</span> <span class="n">p</span><span class="p">,</span> <span class="kt">int</span> <span class="n">s</span><span class="p">,</span> <span class="kt">int</span> <span class="n">l</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="o">-</span><span class="n">s</span><span class="o">+</span><span class="n">l</span> <span class="o">&gt;</span> <span class="n">N</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">chmin</span><span class="p">(</span><span class="n">ans</span><span class="p">[</span><span class="n">p</span><span class="o">-</span><span class="n">s</span><span class="o">+</span><span class="n">l</span><span class="p">],</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">v</span><span class="p">,</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">if</span><span class="p">(</span><span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">p</span><span class="o">*</span><span class="n">i</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="n">i</span><span class="p">,</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">fill</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">ans</span><span class="o">+</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">inf</span><span class="p">);</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sort</span><span class="p">(</span><span class="n">ans</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">ans</span><span class="o">+</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">accumulate</span><span class="p">(</span><span class="n">ans</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">unique</span><span class="p">(</span><span class="n">ans</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">ans</span><span class="o">+</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler 169 Exploring the number of different ways a number can be expressed as a sum of powers of 2]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/169/"/>
    <updated>2016-08-08T20:53:59+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/169</id>
    <content type="html"><![CDATA[<p><a href="https://projecteuler.net/problem=169">Exploring the number of different ways a number can be expressed as a sum of powers of 2</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>タイトル長すぎ．<br />
DPします．<br />
i番目のビットが立っているときそのビットの値を表現するには</p>

<ul>
  <li>2^iを使う</li>
  <li>iより小さいjについて，2^(j+1)から2^(i-1)まで1回ずつ使って，2^jを2回使う</li>
</ul>

<p>という場合が考えられる．これの考え方で上位ビットから以下のようなdpを考える．</p>

<p><code>
dp[i][j] := 10^25の最上位ビットからi番目までのビットを表現するのに，j+1~i-1番目のビットが1回ずつ，jビット目が2回使われてるときの場合の数
</code></p>

<p>更新はコード見てください．</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (169.cpp)</span> <a href='/downloads/code/PE/169.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;bits/stdc++.h&quot;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define reps(i,a,b,s) for(int i=(int)(a);i&lt;(int)(b);i+=s)</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i=(int)(a);i&lt;(int)(b);i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'><span class="k">using</span> <span class="n">i64</span> <span class="o">=</span> <span class="kt">int64_t</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="n">string</span> <span class="n">NS</span> <span class="o">=</span> <span class="s">&quot;100001000101100101010001011000010100000000010100100001001010000000000000000000000000&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">M</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'><span class="k">const</span> <span class="n">bitset</span><span class="o">&lt;</span><span class="n">M</span><span class="o">&gt;</span> <span class="n">N</span><span class="p">(</span><span class="n">NS</span><span class="p">);</span>
</span><span class='line'><span class="n">i64</span> <span class="n">dp</span><span class="p">[</span><span class="n">M</span><span class="p">][</span><span class="n">M</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">dp</span><span class="p">[</span><span class="n">M</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">M</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">M</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">N</span><span class="p">.</span><span class="n">test</span><span class="p">(</span><span class="n">i</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">M</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>            <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">M</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">!=</span> <span class="n">i</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">+=</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span> <span class="c1">// 2^iを使える</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 2^0 ~ 2^i-1までどれも最大2回使える</span>
</span><span class='line'>                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">k</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">+=</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">accumulate</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">M</span><span class="p">,</span> <span class="mi">0LL</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler 114 Counting block combinations I]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/114/"/>
    <updated>2014-06-01T22:49:23+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/114</id>
    <content type="html"><![CDATA[<p><a href="http://projecteuler.net/problem=114">Counting block combinations I</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<p>一番左側にある赤いブロックを決めるとその右隣は黒で確定する.<br />
残りの部分はその長さの時の場合の数.</p>

<hr />

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (114.d)</span> <a href='/downloads/code/PE/114.d'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">stdio</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="nb">string</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">conv</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">algorithm</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">array</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">bigint</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">math</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">range</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">core</span><span class="p">.</span><span class="n">thread</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">long</span><span class="p">[</span><span class="mi">64</span><span class="p">]</span> <span class="n">dp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="n">dp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">dp</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="p">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">unit</span><span class="p">;</span><span class="mf">3..51</span><span class="p">){</span>
</span><span class='line'>        <span class="n">dp</span><span class="p">[</span><span class="n">unit</span><span class="p">]</span> <span class="p">=</span> <span class="n">unit</span> <span class="p">-</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">unit</span><span class="p">-</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="mi">3</span><span class="p">;</span> <span class="n">j</span> <span class="p">+</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">unit</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
</span><span class='line'>                <span class="n">dp</span><span class="p">[</span><span class="n">unit</span><span class="p">]</span> <span class="p">+=</span> <span class="n">dp</span><span class="p">[</span><span class="n">unit</span><span class="p">-</span><span class="n">j</span><span class="p">-</span><span class="n">i</span><span class="p">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="n">stderr</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="s">&quot;Unit &quot;</span><span class="p">,</span> <span class="n">unit</span><span class="p">,</span> <span class="s">&quot;: &quot;</span><span class="p">,</span><span class="n">dp</span><span class="p">[</span><span class="n">unit</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">stderr</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="mi">7</span><span class="p">]);</span>
</span><span class='line'>    <span class="n">writeln</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="mi">50</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler 112 Bouncy numbers]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/112/"/>
    <updated>2014-05-30T00:46:48+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/112</id>
    <content type="html"><![CDATA[<p><a href="http://projecteuler.net/problem=112">Bouncy numbers</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>愚直にやる</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (112.d)</span> <a href='/downloads/code/PE/112.d'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">stdio</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="nb">string</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">conv</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">algorithm</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">array</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">bigint</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">math</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">range</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">core</span><span class="p">.</span><span class="n">thread</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">num</span> <span class="p">=</span> <span class="mi">101</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">bou</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">){</span>
</span><span class='line'>        <span class="nb">string</span> <span class="n">tmp</span> <span class="p">=</span> <span class="n">to</span><span class="p">!</span><span class="nb">string</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">bool</span> <span class="n">inc</span> <span class="p">=</span> <span class="kc">false</span><span class="p">,</span> <span class="n">dec</span> <span class="p">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>        <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">tmp</span><span class="p">.</span><span class="n">length</span><span class="p">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">&gt;</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">inc</span> <span class="p">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">+</span><span class="mi">1</span><span class="p">]</span> <span class="p">&lt;</span> <span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="n">dec</span> <span class="p">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">inc</span> <span class="p">&amp;&amp;</span> <span class="n">dec</span><span class="p">)</span> <span class="n">bou</span><span class="p">++;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">bou</span> <span class="p">*</span> <span class="mi">100</span> <span class="p">%</span> <span class="n">num</span> <span class="p">==</span> <span class="mi">0</span> <span class="p">&amp;&amp;</span> <span class="n">bou</span> <span class="p">*</span> <span class="mi">100</span> <span class="p">/</span> <span class="n">num</span> <span class="p">==</span> <span class="mi">99</span><span class="p">){</span>
</span><span class='line'>            <span class="n">writeln</span><span class="p">(</span><span class="n">num</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">num</span><span class="p">++;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
