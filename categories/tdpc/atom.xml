<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: TDPC | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/categories/tdpc/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-08-28T23:36:25+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Typical DP Contest I - イウィ]]></title>
    <link href="http://algoogle.hadrori.jp/tdpc/i/"/>
    <updated>2015-08-28T23:29:55+09:00</updated>
    <id>http://algoogle.hadrori.jp/tdpc/i</id>
    <content type="html"><![CDATA[<p><a href="http://tdpc.contest.atcoder.jp/tasks/tdpc_iwi">I - イウィ</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>dp[l][r] := [l,r)で消せる文字の数の最大<br />
として[l,r)の幅が小さいほうからDPする．<br />
更新は区間を2つに分割したやつの和の最大をとっていく．<br />
それの他に，区間の両端が’i’で，間の’w’で区切って区切られたの部分がそれぞれ全部消せるならdp[l][r] = r-lになる．</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (I.cpp)</span> <a href='/downloads/code/TDPC/I.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;bits/stdc++.h&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i=(int)(a);i&lt;(int)(b);i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">s</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">dp</span><span class="p">[</span><span class="mi">512</span><span class="p">][</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">rep</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="n">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">l</span><span class="o">+</span><span class="n">d</span><span class="p">;</span>
</span><span class='line'>        <span class="n">repi</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">r</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">r</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">m</span><span class="p">]</span><span class="o">+</span><span class="n">dp</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">r</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">&#39;i&#39;</span> <span class="n">or</span> <span class="n">s</span><span class="p">[</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">&#39;i&#39;</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>        <span class="n">repi</span><span class="p">(</span><span class="n">m</span><span class="p">,</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">m</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;w&#39;</span> <span class="n">and</span> <span class="n">dp</span><span class="p">[</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">m</span><span class="p">]</span> <span class="o">==</span> <span class="n">m</span><span class="o">-</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span> <span class="n">and</span> <span class="n">dp</span><span class="p">[</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">r</span><span class="o">-</span><span class="n">m</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>            <span class="n">dp</span><span class="p">[</span><span class="n">l</span><span class="p">][</span><span class="n">r</span><span class="p">]</span> <span class="o">=</span> <span class="n">r</span><span class="o">-</span><span class="n">l</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">n</span><span class="p">]</span><span class="o">/</span><span class="mi">3</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">input</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'>    <span class="n">n</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">input</span><span class="p">();</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">solve</span><span class="p">());</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typical DP Contest H - ナップザック]]></title>
    <link href="http://algoogle.hadrori.jp/tdpc/h/"/>
    <updated>2015-08-28T22:09:45+09:00</updated>
    <id>http://algoogle.hadrori.jp/tdpc/h</id>
    <content type="html"><![CDATA[<p><a href="http://tdpc.contest.atcoder.jp/tasks/tdpc_knapsack">H - ナップザック</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>色ごとにDPする．<br />
dp[i][j] := 重さi以下でj色以下のときの価値の最大<br />
これを色ごとに順にやっていく．<br />
ある色について更新するとき，元のdp配列は破壊せずにとっておく．<br />
色の種類数を無視して更新していったあと，元の配列とのmaxを取っていく．<br />
この際更新したほうの色数は全部+1して考えることで色の種類数のつじつまが合う．</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (H.cpp)</span> <a href='/downloads/code/TDPC/H.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;bits/stdc++.h&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i=(int)(a);i&lt;(int)(b);i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">C</span><span class="p">,</span> <span class="n">w</span><span class="p">[</span><span class="mi">128</span><span class="p">],</span> <span class="n">v</span><span class="p">[</span><span class="mi">128</span><span class="p">],</span> <span class="n">c</span><span class="p">[</span><span class="mi">128</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="mi">10010</span><span class="p">][</span><span class="mi">60</span><span class="p">],</span> <span class="n">dp2</span><span class="p">[</span><span class="mi">10010</span><span class="p">][</span><span class="mi">60</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">dp</span><span class="p">,</span> <span class="n">dp2</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">dp</span><span class="p">));</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">N</span><span class="p">)</span> <span class="k">if</span><span class="p">(</span><span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">W</span><span class="p">;</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="n">w</span><span class="p">[</span><span class="n">j</span><span class="p">];</span> <span class="n">k</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>                <span class="n">rep</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="n">C</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">l</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">l</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="n">w</span><span class="p">[</span><span class="n">j</span><span class="p">]][</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="n">v</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>        <span class="n">rep</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">W</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">rep</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="n">C</span><span class="p">)</span> <span class="n">dp2</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">dp2</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">l</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">W</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">C</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">dp2</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">input</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">W</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">N</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">w</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">fixed</span> <span class="o">&lt;&lt;</span> <span class="n">setprecision</span><span class="p">(</span><span class="mi">12</span><span class="p">);</span>
</span><span class='line'>    <span class="n">input</span><span class="p">();</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">solve</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typical DP Contest A - コンテスト]]></title>
    <link href="http://algoogle.hadrori.jp/tdpc/a/"/>
    <updated>2014-05-13T17:48:35+09:00</updated>
    <id>http://algoogle.hadrori.jp/tdpc/a</id>
    <content type="html"><![CDATA[<p><a href="http://tdpc.contest.atcoder.jp/tasks/tdpc_contest">A - コンテスト</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>点数の情報を追加するたびにそれまでのの点数の情報から出来るパターンに<br />
新しい点数を足したものを追加する.
dp[i + p] |= dp[i]<br />
みたいにする. 上書きしていってるので, iは大きい方から処理していく.</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (A.d)</span> <a href='/downloads/code/TDPC/A.d'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">stdio</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="nb">string</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">conv</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">algorithm</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">array</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">bigint</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">math</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">range</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Input</span>
</span><span class='line'><span class="nb">string</span><span class="p">[]</span> <span class="n">tokens</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nb">string</span> <span class="n">readToken</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;</span><span class="n">tokenId</span> <span class="p">==</span> <span class="n">tokens</span><span class="p">.</span><span class="n">length</span><span class="p">;)</span>
</span><span class='line'>        <span class="n">tokens</span> <span class="p">=</span> <span class="n">readln</span><span class="p">.</span><span class="n">split</span><span class="p">,</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">tokens</span><span class="p">[</span><span class="n">tokenId</span><span class="p">++];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">readInt</span><span class="p">(){</span> <span class="k">return</span> <span class="n">to</span><span class="p">!</span><span class="kt">int</span><span class="p">(</span><span class="n">readToken</span><span class="p">);}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">bool</span><span class="p">[</span><span class="mi">10010</span><span class="p">]</span> <span class="n">dp</span> <span class="p">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">n</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">sum</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">n</span><span class="p">){</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">p</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="n">sum</span><span class="p">;</span> <span class="n">j</span> <span class="p">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="p">--)</span>
</span><span class='line'>            <span class="n">dp</span><span class="p">[</span><span class="n">j</span> <span class="p">+</span> <span class="n">p</span><span class="p">]</span> <span class="p">|=</span> <span class="n">dp</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>        <span class="n">sum</span> <span class="p">+=</span> <span class="n">p</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">ans</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">sum</span><span class="p">+</span><span class="mi">1</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="n">ans</span><span class="p">++;</span>
</span><span class='line'>    <span class="n">writeln</span><span class="p">(</span><span class="n">ans</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typical DP Contest B - ゲーム]]></title>
    <link href="http://algoogle.hadrori.jp/tdpc/b/"/>
    <updated>2014-05-13T17:43:13+09:00</updated>
    <id>http://algoogle.hadrori.jp/tdpc/b</id>
    <content type="html"><![CDATA[<p><a href="http://tdpc.contest.atcoder.jp/tasks/tdpc_game">B - ゲーム</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<p>#code1<br />
メモをペアにして, ペアを交互に見ることで順番に最善手を尽くすようにした.</p>

<p>#code2<br />
dp[i][j] := 左の山が i 個, 右の山が j このこっている状態からスタートするときの先手の取るものの価値の和</p>

<hr />

<h4 id="section-2">コード</h4>

<hr />

<p>#code2
<figure class='code'><figcaption><span> (B.d)</span> <a href='/downloads/code/TDPC/B.d'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">stdio</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="nb">string</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">conv</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">algorithm</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">array</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">bigint</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">math</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">range</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">core</span><span class="p">.</span><span class="n">thread</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Input</span>
</span><span class='line'><span class="nb">string</span><span class="p">[]</span> <span class="n">tokens</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nb">string</span> <span class="n">readToken</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;</span><span class="n">tokenId</span> <span class="p">==</span> <span class="n">tokens</span><span class="p">.</span><span class="n">length</span><span class="p">;)</span>
</span><span class='line'>        <span class="n">tokens</span> <span class="p">=</span> <span class="n">readln</span><span class="p">.</span><span class="n">split</span><span class="p">,</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">tokens</span><span class="p">[</span><span class="n">tokenId</span><span class="p">++];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">readInt</span><span class="p">(){</span> <span class="k">return</span> <span class="n">to</span><span class="p">!</span><span class="kt">int</span><span class="p">(</span><span class="n">readToken</span><span class="p">);}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//chmin/chmax</span>
</span><span class='line'><span class="kt">void</span> <span class="n">chmin</span><span class="p">(</span><span class="n">T</span><span class="p">)(</span><span class="k">ref</span> <span class="n">T</span> <span class="n">t</span><span class="p">,</span> <span class="n">T</span> <span class="n">f</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="n">t</span> <span class="p">&gt;</span> <span class="n">f</span><span class="p">)</span> <span class="n">t</span> <span class="p">=</span> <span class="n">f</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">chmax</span><span class="p">(</span><span class="n">T</span><span class="p">)(</span><span class="k">ref</span> <span class="n">T</span> <span class="n">t</span><span class="p">,</span> <span class="n">T</span> <span class="n">f</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="n">t</span> <span class="p">&lt;</span> <span class="n">f</span><span class="p">)</span> <span class="n">t</span> <span class="p">=</span> <span class="n">f</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Pair</span>
</span><span class='line'><span class="k">struct</span> <span class="n">Pair</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">S</span> <span class="n">x</span><span class="p">;</span> <span class="n">T</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">opCmp</span><span class="p">(</span><span class="k">ref</span> <span class="k">const</span> <span class="n">Pair</span> <span class="n">p</span><span class="p">)</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="p">&lt;</span> <span class="n">p</span><span class="p">.</span><span class="n">x</span><span class="p">)</span> <span class="p">?</span> <span class="p">-</span><span class="mi">1</span> <span class="p">:</span> <span class="p">(</span><span class="n">x</span> <span class="p">&gt;</span> <span class="n">p</span><span class="p">.</span><span class="n">x</span><span class="p">)</span> <span class="p">?</span> <span class="p">+</span><span class="mi">1</span> <span class="p">:</span> <span class="p">(</span><span class="n">y</span> <span class="p">&lt;</span> <span class="n">p</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="p">?</span> <span class="p">-</span><span class="mi">1</span> <span class="p">:</span> <span class="p">(</span><span class="n">y</span> <span class="p">&gt;</span> <span class="n">p</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="p">?</span> <span class="p">+</span><span class="mi">1</span> <span class="p">:</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="nb">string</span> <span class="n">toString</span><span class="p">()</span> <span class="k">const</span> <span class="p">{</span> <span class="k">return</span> <span class="s">&quot;(&quot;</span> <span class="p">~</span> <span class="n">to</span><span class="p">!</span><span class="nb">string</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">~</span> <span class="s">&quot;, &quot;</span> <span class="p">~</span> <span class="n">to</span><span class="p">!</span><span class="nb">string</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="p">~</span> <span class="s">&quot;)&quot;</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">auto</span> <span class="n">pair</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="n">T</span><span class="p">)(</span><span class="n">S</span> <span class="n">x</span><span class="p">,</span> <span class="n">T</span> <span class="n">y</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">Pair</span><span class="p">!(</span><span class="n">S</span><span class="p">,</span> <span class="n">T</span><span class="p">)(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span><span class="p">[</span><span class="mi">1024</span><span class="p">]</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="n">Pair</span><span class="p">!(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">)[</span><span class="mi">1024</span><span class="p">][</span><span class="mi">1024</span><span class="p">]</span> <span class="n">memo</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">A</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="n">B</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0..1024</span><span class="p">)</span>
</span><span class='line'>        <span class="k">foreach</span><span class="p">(</span><span class="n">j</span><span class="p">;</span><span class="mf">0..1024</span><span class="p">)</span> <span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="n">pair</span><span class="p">(-</span><span class="mi">1</span><span class="p">,-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">A</span><span class="p">)</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">B</span><span class="p">)</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="n">writeln</span><span class="p">(</span><span class="n">rec</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="n">x</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">Pair</span><span class="p">!(</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="p">)</span> <span class="n">rec</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="kt">int</span> <span class="n">j</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">x</span> <span class="p">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">A</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">B</span><span class="p">)</span> <span class="k">return</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="n">pair</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">A</span><span class="p">){</span>
</span><span class='line'>        <span class="k">auto</span> <span class="n">tmp</span> <span class="p">=</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="p">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">swap</span><span class="p">(</span><span class="n">tmp</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">tmp</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>        <span class="n">tmp</span><span class="p">.</span><span class="n">x</span> <span class="p">+=</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="n">tmp</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="p">==</span> <span class="n">B</span><span class="p">){</span>
</span><span class='line'>        <span class="k">auto</span> <span class="n">tmp</span> <span class="p">=</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span> <span class="p">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
</span><span class='line'>        <span class="n">swap</span><span class="p">(</span><span class="n">tmp</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">tmp</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>        <span class="n">tmp</span><span class="p">.</span><span class="n">x</span> <span class="p">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="n">tmp</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">auto</span> <span class="n">ret</span> <span class="p">=</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span> <span class="p">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">),</span> <span class="n">hoge</span> <span class="p">=</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="p">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">swap</span><span class="p">(</span><span class="n">ret</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">ret</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>    <span class="n">swap</span><span class="p">(</span><span class="n">hoge</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">hoge</span><span class="p">.</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ret</span><span class="p">.</span><span class="n">x</span> <span class="p">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">hoge</span><span class="p">.</span><span class="n">x</span> <span class="p">+=</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class='line'>    <span class="n">chmax</span><span class="p">(</span><span class="n">ret</span><span class="p">,</span> <span class="n">hoge</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="n">ret</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>#code2
<figure class='code'><figcaption><span> (B.cpp)</span> <a href='/downloads/code/TDPC/B.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="cp">#define int long long</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i = (a); i &lt; (b); i++)</span>
</span><span class='line'><span class="cp">#define rep(i,a) repi(i,0,a)</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">1024</span><span class="p">],</span> <span class="n">b</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">suma</span><span class="p">[</span><span class="mi">1024</span><span class="p">],</span> <span class="n">sumb</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">dp</span><span class="p">[</span><span class="mi">1024</span><span class="p">][</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">input</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">A</span> <span class="o">&gt;&gt;</span> <span class="n">B</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">A</span><span class="p">)</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">B</span><span class="p">)</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">reverse</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">A</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span> <span class="n">reverse</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">b</span><span class="o">+</span><span class="n">B</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">A</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">suma</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">suma</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">B</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">sumb</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">sumb</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">solve</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">A</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="n">B</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">suma</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">sumb</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">-</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">j</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">suma</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">sumb</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="n">A</span><span class="p">][</span><span class="n">B</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">signed</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">input</span><span class="p">();</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">solve</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typical DP Contest C - トーナメント]]></title>
    <link href="http://algoogle.hadrori.jp/tdpc/c/"/>
    <updated>2014-05-13T17:20:33+09:00</updated>
    <id>http://algoogle.hadrori.jp/tdpc/c</id>
    <content type="html"><![CDATA[<p><a href="http://tdpc.contest.atcoder.jp/tasks/tdpc_tournament">C - トーナメント</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>m人目がnラウンド目を勝つ確率をメモ化再帰した #Code1</p>

<p><script type="math/tex; mode=display"></p>

<p>memo[m][n] = \sum_{i = left}^{right} memo[m][n-1] * memo[i][n-1] /(1 + 10^{(R_i-R_m)/400})</p>

<p></script></p>

<p>left, rightは2分木のmのn-1ラウンド目のところの兄弟を根とした葉の範囲</p>

<p><img src="/images/tdpc-c-01.png" alt="tdpc-c" /></p>

<p>DP解 #Code2</p>

<p><script type="math/tex; mode=display"></p>

<p>dp[j][0] = 0</p>

<p></script></p>

<p><script type="math/tex; mode=display"></p>

<p>dp[j][i] = \sum_{a = left}^{right} dp[j][i-1] * dp[a][i-1] /(1 + 10^{(R_a-R_j)/400})</p>

<p></script></p>

<h4 id="section-2">コード</h4>

<hr />

<p>#code1</p>

<p><figure class='code'><figcaption><span> (C.d)</span> <a href='/downloads/code/TDPC/C.d'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='d'><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">stdio</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="nb">string</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">conv</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">std</span><span class="p">.</span><span class="n">algorithm</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">array</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">bigint</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">math</span><span class="p">,</span> <span class="n">std</span><span class="p">.</span><span class="n">range</span><span class="p">;</span>
</span><span class='line'><span class="k">import</span> <span class="n">core</span><span class="p">.</span><span class="n">thread</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">string</span><span class="p">[]</span> <span class="n">tokens</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nb">string</span> <span class="n">readToken</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(;</span><span class="n">tokenId</span> <span class="p">==</span> <span class="n">tokens</span><span class="p">.</span><span class="n">length</span><span class="p">;)</span>
</span><span class='line'>        <span class="n">tokens</span> <span class="p">=</span> <span class="n">readln</span><span class="p">.</span><span class="n">split</span><span class="p">,</span> <span class="n">tokenId</span> <span class="p">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">tokens</span><span class="p">[</span><span class="n">tokenId</span><span class="p">++];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">readInt</span><span class="p">(){</span> <span class="k">return</span> <span class="n">to</span><span class="p">!</span><span class="kt">int</span><span class="p">(</span><span class="n">readToken</span><span class="p">);}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span><span class="p">[</span><span class="mi">1024</span><span class="p">]</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'><span class="kt">double</span> <span class="n">memo</span><span class="p">[</span><span class="mi">1024</span><span class="p">][</span><span class="mi">16</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">k</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0..1024</span><span class="p">)</span> <span class="n">memo</span><span class="p">[</span><span class="n">i</span><span class="p">][]</span> <span class="p">=</span> <span class="p">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0..1</span><span class="p">&lt;&lt;</span><span class="n">k</span><span class="p">)</span> <span class="n">r</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">readInt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0..1</span><span class="p">&lt;&lt;</span><span class="n">k</span><span class="p">)</span> <span class="n">writefln</span><span class="p">(</span><span class="s">&quot;%.10f&quot;</span><span class="p">,</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">k</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">double</span> <span class="n">rec</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span> <span class="p">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="p">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">memo</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span> <span class="p">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">double</span> <span class="n">ret</span> <span class="p">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">prev</span> <span class="p">=</span> <span class="n">rec</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="p">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">d</span> <span class="p">=</span> <span class="n">k</span> <span class="p">-</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">left</span> <span class="p">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">right</span> <span class="p">=</span> <span class="mi">1</span> <span class="p">&lt;&lt;</span> <span class="n">k</span><span class="p">,</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span><span class="mf">0.</span><span class="p">.</span><span class="n">d</span><span class="p">){</span>
</span><span class='line'>        <span class="n">res</span> <span class="p">=</span> <span class="p">(</span><span class="n">left</span> <span class="p">+</span> <span class="n">right</span><span class="p">)</span> <span class="p">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">m</span> <span class="p">&lt;</span> <span class="n">res</span><span class="p">)</span> <span class="n">right</span> <span class="p">=</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>        <span class="k">else</span> <span class="n">left</span> <span class="p">=</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">res</span> <span class="p">=</span> <span class="p">(</span><span class="n">left</span> <span class="p">+</span> <span class="n">right</span><span class="p">)</span> <span class="p">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">m</span> <span class="p">&lt;</span> <span class="n">res</span><span class="p">)</span> <span class="n">left</span> <span class="p">=</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span> <span class="n">right</span> <span class="p">=</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="n">i</span><span class="p">;</span> <span class="n">left</span><span class="p">..</span><span class="n">right</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ret</span> <span class="p">+=</span> <span class="n">prev</span> <span class="p">*</span> <span class="n">rec</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">n</span> <span class="p">-</span> <span class="mi">1</span><span class="p">)</span> <span class="p">/</span> <span class="p">(</span><span class="mi">1</span> <span class="p">+</span> <span class="n">pow</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span> <span class="mf">1.0</span> <span class="p">*</span> <span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">-</span> <span class="n">r</span><span class="p">[</span><span class="n">m</span><span class="p">])</span> <span class="p">/</span> <span class="mi">400</span><span class="p">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">m</span><span class="p">][</span><span class="n">n</span><span class="p">]</span> <span class="p">=</span> <span class="n">ret</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>#code2</p>

<p><figure class='code'><figcaption><span> (C.cpp)</span> <a href='/downloads/code/TDPC/C.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;cmath&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define int long long</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i = (a); i &lt; (b); i++)</span>
</span><span class='line'><span class="cp">#define rep(i,a) repi(i,0,a)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">K</span><span class="p">,</span> <span class="n">R</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'><span class="kt">double</span> <span class="n">dp</span><span class="p">[</span><span class="mi">16</span><span class="p">][</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">input</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">K</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">K</span><span class="p">)</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">R</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">solve</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">K</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mf">1.0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">repi</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">K</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="n">rep</span><span class="p">(</span><span class="n">j</span><span class="p">,</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">K</span><span class="p">){</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">j</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">-=</span> <span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="n">d</span> <span class="o">%</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">l</span> <span class="o">=</span> <span class="p">(</span><span class="n">d</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">r</span> <span class="o">=</span> <span class="p">(</span><span class="n">d</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">repi</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">!=</span> <span class="n">k</span><span class="p">)</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">+=</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">*</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">pow</span><span class="p">(</span><span class="mf">10.0</span><span class="p">,</span><span class="mf">1.0</span><span class="o">*</span><span class="p">(</span><span class="n">R</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">-</span><span class="n">R</span><span class="p">[</span><span class="n">j</span><span class="p">])</span> <span class="o">/</span> <span class="mf">400.0</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">K</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%.9f</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">dp</span><span class="p">[</span><span class="n">K</span><span class="p">][</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">signed</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">input</span><span class="p">();</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
