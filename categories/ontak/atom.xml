<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ONTAK | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/categories/ontak/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ONTAK 2008 Leonardo's Numbers]]></title>
    <link href="http://algoogle.hadrori.jp/ontak/ontak2008leo/"/>
    <updated>2014-11-19T16:18:23+09:00</updated>
    <id>http://algoogle.hadrori.jp/ontak/ontak2008leo</id>
    <content type="html"><![CDATA[<p><a href="http://main.edu.pl/en/archive/ontak/2008/leo">Leonardo’s Numbers</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>{% math %}</p>

<p>L_{0} = L_{1} = 1<br />
L_{i+1} = L_{i}+L_{i-1}+1</p>

<p>{% endmath %}</p>

<p>数列Lについて,</p>

<p>{% math %}</p>

<p>\sum_{i=0}^{n} L_{i}^{k}</p>

<p>{% endmath %}</p>

<p>を求めよ</p>

<h4 id="section-1">解法</h4>

<hr />

<p>{% math %}</p>

<p>K_{i} = L_{i} + 1</p>

<p>{% endmath %}</p>

<p>と数列Kを定義すると</p>

<p>{% math %}</p>

<p>K_{0} = K_{1} = 2<br />
K_{i+1} = K_{i}+K_{i-1}</p>

<p>{% endmath %}</p>

<p>と数列Kを表現できる(Kの各値はそれぞれフィボナッチ数列の値を2倍したものになる).<br />
求めたい値はKを用いて</p>

<p>{% math %}</p>

<p>\sum_{i=0}^{n}L_{i}^{k} = \sum_{i=0}^{n}(K_{i}-1)^{k} <br />
 = \sum_{i=0}^{n}\sum_{j=0}^{k} {}<em>{k}C</em>{j} (-1)^{k-j} K_{i}^{j} <br />
 = \sum_{j=0}^{k} {}<em>{k}C</em>{j} (-1)^{k-j} \sum_{i=0}^{n} K_{i}^{j} \</p>

<p>{% endmath %}</p>

<p>組合せはパスカルの三角形を予め作っておくことでO(1)で求められる.<br />
つまり{% m %}\sum_{i=0}^{n} K_{i}^{j}{% em %}を高速に求められればそれをk回繰り返す(高々13回)ことで何とかなりそう.<br />
{% m %}K_{i+1}{% em %}は{% m %}K_{i}, K_{i-1}{% em %}に, それまでの和{% m %}S_{i,k}{% em %}は{% m %}S_{i-1,k}, K_{i}{% em %}に依存することに注意すると<br />
フィボナッチ数を求める時みたいに行列累乗で求められることがわかる.<br />
なぜなら</p>

<p>{% math %}</p>

<p>K_{i+1}^{j}K_{i}^{k-j} = (K_{i}+K_{i-1})^{j}K_{i}^{k-j}<br />
 = \sum_{l=0}^{j} {}<em>{j}C</em>{l} K_{i}^{k-j+l} K_{i-1}^{j-l}</p>

<p>{% endmath %}</p>

<p>となるから.</p>

<p>{% math %}</p>

<p>\left(
\begin{array}{cccccc}
        S_{i,k} <br />
        K_{i+1}^{k} <br />
        \vdots <br />
        K_{i+1}^{j}K_{i}^{k-j} <br />
        \vdots <br />
        K_{i}^{k} <br />
\end{array}
\right) = \left(
\begin{array}{cccccc}
        1 &amp; 1 &amp; 0 &amp; \cdots &amp; \cdots &amp; \cdots &amp; 0 <br />
        0 &amp; {}<em>{k}C</em>{0} &amp; {}<em>{k}C</em>{1} &amp; \cdots &amp; \cdots &amp; \cdots &amp; {}<em>{k}C</em>{k} <br />
        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \ddots &amp; \vdots <br />
        0 &amp; {}<em>{k-j}C</em>{0} &amp; {}<em>{k-j}C</em>{0} &amp; \cdots &amp; {}<em>{k-j}C</em>{k-j} &amp; \cdots &amp; 0 <br />
        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \ddots &amp; \vdots <br />
        0 &amp; {}<em>{0}C</em>{0} &amp; 0 &amp; \cdots &amp; \cdots &amp; \cdots &amp; 0
\end{array}
\right) \left(
\begin{array}{cccccc}
        S_{i-1,k} <br />
        K_{i}^{k} <br />
        \vdots <br />
        K_{i}^{j}K_{i-1}^{k-j} <br />
        \vdots <br />
        K_{i-1}^{k} <br />
\end{array}
\right)
{% endmath %}</p>

<p>つまり</p>

<p>{% math %}</p>

<p>\left(
\begin{array}{cccccc}
        S_{n,k} <br />
        K_{n+1}^{k} <br />
        \vdots <br />
        K_{n+1}^{j}K_{n}^{k-j} <br />
        \vdots <br />
        K_{n}^{k} <br />
\end{array}
\right) = \left(
\begin{array}{cccccc}
        1 &amp; 1 &amp; 0 &amp; \cdots &amp; \cdots &amp; \cdots &amp; 0 <br />
        0 &amp; {}<em>{k}C</em>{0} &amp; {}<em>{k}C</em>{1} &amp; \cdots &amp; \cdots &amp; \cdots &amp; {}<em>{k}C</em>{k} <br />
        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \ddots &amp; \vdots <br />
        0 &amp; {}<em>{k-j}C</em>{0} &amp; {}<em>{k-j}C</em>{0} &amp; \cdots &amp; {}<em>{k-j}C</em>{k-j} &amp; \cdots &amp; 0 <br />
        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \ddots &amp; \vdots <br />
        0 &amp; {}<em>{0}C</em>{0} &amp; 0 &amp; \cdots &amp; \cdots &amp; \cdots &amp; 0
\end{array}
\right)^{n} \left(
\begin{array}{cccccc}
        2^{k} <br />
        2^{k} <br />
        \vdots <br />
        2^{k} <br />
        \vdots <br />
        2^{k} <br />
\end{array}
\right)
{% endmath %}</p>

<p>この計算は{% m %}O(k^{3}\log n){% em %}ででき,<br />
全体では{% m %}O(k^{4}\log n){% em %}となる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code ONTAK/2008/leo.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ONTAK 2007 Hyperclock]]></title>
    <link href="http://algoogle.hadrori.jp/ontak/ontak2007hyperclock/"/>
    <updated>2014-10-29T00:04:04+09:00</updated>
    <id>http://algoogle.hadrori.jp/ontak/ontak2007hyperclock</id>
    <content type="html"><![CDATA[<p><a href="http://main.edu.pl/en/archive/ontak/2007/hip">Hyperclock</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>N個の針が1つだけある時計がある. それぞれ盤上には{% m %}k_i{% em %}個の番号が1から振られている.<br />
そのN個の時計の針の位置の組によって時刻を決定する時計Hyperclockを考える.<br />
時計を1つ選んで針を1つ進めるか戻すかの操作ができるとき, ありうる全ての組をちょうど1度だけ示し, 初期状態に戻るような操作方法を示せ.<br />
ただし全ての時計は始め1を指しているとし, そのような操作が存在しない場合はNIE(ポーランド語でNOの意)と表示せよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>ONTAKとはポーランドのOI系の合宿.<br />
この問題は必ず条件を満たす操作方法が存在する.</p>

<p>2つの時計u, vについて2次元の表(縦軸をu, 横軸をv)で考える.<br />
{% m %}k_v{% em %}が偶数の場合<br />
uを1から{% m %}k_u{% em %}までおろして, vを1進め, 今度はuを{% m %}k_u{% em %}から1まで戻して…とやればよい.<br />
これで最終的に初期状態に戻る.<br />
{% m %}k_v{% em %}が奇数の場合<br />
uを1から{% m %}k_u-1{% em %}まで動かして, vを1進め, 今度はuを{% m %}k_u-1{% em %}から1まで戻して…とやる.<br />
この時点で針はそれぞれ{% m %}k_u-1{% em %}と{% m %}k_v{% em %}を指している.<br />
今表の一番下だけ一度も通っていない状態.<br />
よってこれをさらに1つ下げてvの針を{% m %}k_v{% em %}から1まで戻せば良い.<br />
あとはuを1進めるだけで初期状態に戻る.</p>

<p>時計が2つでできたら, その操作列を1つの時計としてみる.<br />
あとはそれを次の時計, 更に次の時計, と組み合わせていけば良い.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code ONTAK/2007/hyperclock.cpp %}</p>
]]></content>
  </entry>
  
</feed>
