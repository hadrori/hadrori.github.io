<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: max-flow | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/max-flow/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2328 Mobile Network]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2328/"/>
    <updated>2015-05-12T23:09:33+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2328</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2328">Mobile Network</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>容量がx&gt;=0で単調非減少なxについての多項式のグラフが与えられる． 
頂点1から頂点nへの最大流を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>多項式の比較は問題に書いてない気がするけどxが十分に大きな値をとったときの多項式の値で比較，つまり次数が大きい方から係数を比較して通った．<br />
あとはそれで最大流を求めるだけ．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2328.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PA 2006 Travel Agency]]></title>
    <link href="http://algoogle.hadrori.jp/pa/pa2006travel/"/>
    <updated>2014-10-30T22:24:16+09:00</updated>
    <id>http://algoogle.hadrori.jp/pa/pa2006travel</id>
    <content type="html"><![CDATA[<p><a href="http://main.edu.pl/en/archive/pa/2006/biu">Travel Agency</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>n人の客がいる.<br />
この人達に旅行を手配するとそれぞれ{% m %}x_{i}{% em %}の利益をもたらす(負もある).<br />
またこれらの人はそれぞれ{% m %}k_{i}{% em %}人と関係があり, {% m %}a_{ij}{% em %}が旅行に行かない場合{% m %}b_{ij}{% em %}の不利益を出す.<br />
利益を最大にするような客の選び方を求めよ</p>

<h4 id="section-1">解法</h4>

<hr />

<p>この問題はテストケースをダウンロードして, テストケース番号に応じて埋め込んだ答えを吐くコードを提出しなければならないことに注意すること.<br />
コードはそのとき使ったコード全てを載せておく.</p>

<ul>
  <li>説明抜きの解法</li>
</ul>

<p>もたらす利益が非負であるものの総和が利益の上限.<br />
ここから減る利益を最小化したい.<br />
頂点sから利益が非負の客に利益をコストとする有向辺を張る.<br />
利益が負の客から頂点tに利益の絶対値をコストとする有向辺を張る.<br />
次に客iと関係がある{% m %}a_{ij}{% em %}に{% m %}b_{ij}{% em %}をコストとする有向辺を張る.<br />
構築したグラフのS-T最小カットが減る利益の最小値, 集合Sが選ぶ客の集合, 集合Tを選ばない客の集合となる.</p>

<p>最小カットは最大流を求めればよく, 最大流を求めた後に集合Sはsから容量が正の辺を辿っていける頂点が選ぶ客になる.</p>

<ul>
  <li>なぜうまくいくのか</li>
</ul>

<p>頂点sから伸びてるのは増える分だけ, また増える分は全て頂点sから伸びてる.<br />
つまりsから伸びてる辺をカットするとその先の頂点をTに入れるということなので利益がその分減る.<br />
頂点tに入る辺は不利益をもたらす客からの辺で, 不利益をもたらす客からの辺は全てtに伸びてる.<br />
この辺をカットするということはその客をSに入れるということなのでその利益がその分減る.<br />
その他の辺は利益が減る辺で, その辺をカットするということは前の頂点はSに, 後の頂点はTに含まれるということ.<br />
これはまさに問題の客同士の関係を表している.</p>

<p>どの辺を切っても利益が減ることを表していて, 頂点を2つの集合に分けるような最小のコストを求めることになる.<br />
つまり最小カットを求めるとよいということになる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PA/2006/travel.sh %}</p>

<p>{% include_code PA/2006/travel.cpp %}</p>

<p>{% include_code PA/2006/travel2.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2304 Reverse Roads]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2304/"/>
    <updated>2014-05-18T20:47:58+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2304</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2304">Reverse Road</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>有効グラフを与えるのでそのグラフの幾つかの辺の向きを逆にすることで最大流を最大化したい.<br />
そのときの最大流と向きを変えた辺のリストを求めよ</p>

<h4 id="section-1">解法</h4>

<hr />

<p>容量が1しか無いので辺に元々の向きかどうかの情報をもたせた無向グラフで最大流を流せばよい.<br />
フローを流した後に元々の向きでない辺で容量が減っているものを列挙する.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2304.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 1274 The Perfect Stall]]></title>
    <link href="http://algoogle.hadrori.jp/pku/1274/"/>
    <updated>2014-05-04T17:36:44+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/1274</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1274">The Perfect Stall</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>N頭の牛それぞれについて, 牛乳を出すことのできる牛舎の集合が与えられる.<br />
牛と牛舎をうまく割り当てた時の牛乳を出すことのできる牛の数の最大を求めよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>2部マッチングやるだけ</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/1274.cpp %}</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 2112 Optimal Milking]]></title>
    <link href="http://algoogle.hadrori.jp/pku/2112/"/>
    <updated>2014-05-04T17:33:44+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/2112</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2112">Optimal Milking</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>牛と機械があって, 機械に割り当てられる牛の上限, 全ての牛, 機械の互いの距離が与えられる.<br />
全ての牛を機械に割り当てるとき, 移動距離の最大を最小化せよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>最大の最小なので二分探索する.<br />
また, 2部マッチングにもなっているので最大流問題に帰着できる.<br />
予め最短距離を求めておいて, 各辺の上限で2分探索すればよい.<br />
入力の0は行くことが出来ないことを意味することに注意する.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/2112.cpp %}</p>

]]></content>
  </entry>
  
</feed>
