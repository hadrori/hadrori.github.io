<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: bidirectional-search | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/bidirectional-search/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-12-14T02:08:05+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2443 Reverse Sort]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2443/"/>
    <updated>2014-05-13T16:08:08+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2443</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2443">Reverse Sort</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>最大で長さ10の数列がある. 数列の連続する区間をreverseすることを繰り返すことで数列をソートしたい.<br />
そのときの最小のステップ数を求めよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>まず, ステップ数は最大でもN-1になる. なぜなら位置が正しくない場所のうち, 一番左を揃えるように毎ステップやれば一番右はその左の数が正しくなったときに正しい位置になるから.</p>

<p>そのことを利用して両側探索(半分全列挙)を行う.<br />
また最悪でもN-1ステップなので列挙は最大でも4ステップ分で良い. それらに共通する数列がなければ必ず最悪ステップが答えになる.<br />
これで{% m %}O({}<em>{10}C</em>{2}^4){% em %}程度になる.<br />
数列はunsigned long longを4ビットごとに区切ってhashにした.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2443.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1260 Organize Your Train]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1260/"/>
    <updated>2014-05-12T11:14:07+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1260</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1260">Organize Your Train</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>x(&lt;=4)本の列車止める場所があって, それら場所はy本の辺で繋がれている.<br />
右と左で区別する.<br />
列車(最大10両分)があるときそれらを区切って辺にそって移動させる.<br />
辺にそって行くので出た方向と同じ方向から入ってくるときは列車の位置は反転する.<br />
初期状態を終了状態が与えられるので, 最小で何回の移動で初期状態から終了状態にもっていけるか.<br />
移動は最大でも6回である.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>初期状態と終了状態の両方から全探索する.<br />
それぞれ3回の移動までやれば両側から探索しているので解がみつかる.<br />
全探索する場合探索が深くなればなるほど状態が多くなるが, このように目的状態が分かっている場合, 両側から半分ずつ調べれば無駄な探索を大幅に省ける.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1260.cpp %}</p>
]]></content>
  </entry>
  
</feed>
