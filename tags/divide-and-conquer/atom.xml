<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: divide-and-conquer | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/divide-and-conquer/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-12-14T02:08:05+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codeforces 448C Painting Fence]]></title>
    <link href="http://algoogle.hadrori.jp/codeforces/448c/"/>
    <updated>2014-07-18T15:21:55+09:00</updated>
    <id>http://algoogle.hadrori.jp/codeforces/448c</id>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/448/problem/C">Painting Fence</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>n個のフェンスが並んであって, それぞれ幅1, 高さがa[i]になっている.<br />
これらをすべて塗りつぶしたい.<br />
連続する縦か横に一気に塗ることができるとき, 最小何回でぬれるか</p>

<h4 id="section-1">解法</h4>

<hr />

<p>分割統治する.<br />
区間[l,r)を塗るとき, そのなかで最小の高さ以下の部分は横に一気に塗りつぶせる.<br />
そこでその高さの部分で分割していく.<br />
分割された左右の結果と最小の高さの和(つまりこの区間で横に塗る回数)と, その区間全てを縦に塗る回数(つまりr-l)の最小がその区間を塗るのにかかる最小回数.<br />
また分割していくとき, 下の部分は塗ってあると仮定するのでその高さを床にする.<br />
あとはコードを見ればわかるはず.</p>

<p>ちなみに今回は毎回区間を舐めて最小の高さを求めているので{% m %}O(n^2){% em %}になるが, Segment Treeを用いれば{% m %}O(n\log n){% em %}に落とせる</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code Codeforces/448C.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2301 Sleeping Time]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2301/"/>
    <updated>2014-05-26T17:58:47+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2301</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2301">Sleeping Time</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>毎回更新するときに間違えた場合も含めて再帰していく.<br />
R, Lが範囲内にきたら1を返す. もう範囲外しか取れないなら0を返すように枝刈りすればだいぶ速くなる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2301.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 1987 Distance Statistics]]></title>
    <link href="http://algoogle.hadrori.jp/pku/1987/"/>
    <updated>2014-05-06T21:25:58+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/1987</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=1987">Distance Statistics</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>頂点数N(&lt;=40,000)の木の中で, 距離がK以下の頂点の組はいくつあるか.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>真っ当に考えれば分割統治で, 木の分割統治なので重心分解をする(詳しくは蟻本参照).<br />
ただしPOJなのでグラフの構築にvectorなど使ったら当然TLEする.<br />
問題の制約から, 各点からは4方向にしか辺が伸びないことを考えると大きさ4の配列を取ってサイズを覚えておくだけで十分なことがわかる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/1987.cpp %}</p>

]]></content>
  </entry>
  
</feed>
