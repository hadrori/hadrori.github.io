<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: modulo | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/modulo/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2595 Cookie Counter]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2595/"/>
    <updated>2015-04-07T01:27:26+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2595</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2595">Cookie Counter</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>D(&lt;=1,000,000,000,000)日でN(&lt;=2,000)個のクッキーを食べたい.<br />
ただし1日に食べる枚数はX(&lt;=2,000)枚以下でなければならない.<br />
食べ方は何通りあるか.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>実際に1枚以上クッキーを食べる日数はN日以下.<br />
つまり1枚も食べない日を除いてDPすればよい.<br />
その結果に対して食べる日と食べない日の組合せを求めれば答えになる.<br />
dp[i][j] := i日でj枚食べる場合の数<br />
とすれば</p>

<p>{% math %}</p>

<p>dp[i+1][j] = \sum_{k=j-x+1}^{j-1} dp[i][k]</p>

<p>{% endmath %}</p>

<p>これは連続する区間の和になっているのでDPの更新の時に区間をスライドさせて行けば各日数の更新はO(N)になる.<br />
これでこのDPの計算量はO(N^2)である.</p>

<p>あとは食べる日と食べない日の組合せを計算してやればよい.<br />
各組合せの計算はDが大きいのでO(N)で計算する.</p>

<p>{% math %}</p>

<p>\sum_{i=1}^{N} dp[i][N] * {}<em>{D}C</em>{i}</p>

<p>{% endmath %}</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2595.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler 48 Self powers]]></title>
    <link href="http://algoogle.hadrori.jp/projecteuler/48/"/>
    <updated>2014-05-14T08:50:30+09:00</updated>
    <id>http://algoogle.hadrori.jp/projecteuler/48</id>
    <content type="html"><![CDATA[<p><a href="http://projecteuler.net/problem=48">Self powers</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>累乗して足すだけ</p>

<p>####</p>

<hr />

<p>{% include_code PE/48.hs %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1501 Grid]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1501/"/>
    <updated>2014-05-14T08:46:15+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1501</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1501">Grid</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>境界を超えると反対側の境界に出るので, 元のグリッドを8方向に元のグリッド1つ分拡張したグリッドを考える.<br />
元の点bの位置をそれぞれ8方向に拡張された位置に移動させた点と<br />
点aの位置の距離が一番小さくなる点をリストアップする.<br />
あとはaからそれぞれの点まで行く組み合わせを合計すればいい.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1501.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2353 Four Arithmetic Operations]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2353/"/>
    <updated>2014-05-14T08:42:06+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2353</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2353">Four Arithmetic Operations</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>計算結果の絶対値は2^31に収まるけど, 途中経過が余裕でオーバーしてくるので<br />
適当にmodとってやる<br />
-&gt;掛け算でオーバーフローするのでだめ<br />
(BigInteger使えるならそれで大丈夫なはず)</p>

<p>中国式剰余定理なら素数m,nについて<br />
 y ≡ a (mod m), y ≡ b (mod n)
のとき,<br />
x ≡ y (mod mn)<br />
となるxが一意に定まる. <br />
このことからm, nを適当な大きさでとればオーバーフローなくxを求められる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2353.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2335 10-Year-Old Dynamic Programming]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2335/"/>
    <updated>2014-05-13T18:20:54+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2335</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2335">10-Year-Old Dynamic Programming</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>組み合わせは負の地点に到達する場合を除いて</p>

<p>{% math %}
\begin{eqnarray}
\sum^K_{i=0}\big({}<em>{N+2i} C _i- {}</em>{N+2i}C_{i-1}\big)\times \big({}<em>{N+2(K-i)} C</em>{K-i}-{}<em>{N+2(K-i)}C</em>{(K-i)-1}\big)\times {}<em>{N+M+2k}C</em>{N + 2i}
\end{eqnarray}
{% endmath %}</p>

<p>で求められる.<br />
あとはmod周りを注意する.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2335.cpp %}</p>
]]></content>
  </entry>
  
</feed>
