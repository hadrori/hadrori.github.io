<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: compress | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/compress/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JOI 春合宿 2008 Typhoon]]></title>
    <link href="http://algoogle.hadrori.jp/joi/sc2008typhoon/"/>
    <updated>2014-09-04T17:27:48+09:00</updated>
    <id>http://algoogle.hadrori.jp/joi/sc2008typhoon</id>
    <content type="html"><![CDATA[<p><a href="http://joisc2008.contest.atcoder.jp/tasks/joisc2008_typhoon">Typhoon</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>n個の台風の被害にあった区間[s,t]の情報が与えられる.<br />
地点pに台風q号からr号までで被害にあった回数を答えるクエリm個を捌け</p>

<h4 id="section-1">解法</h4>

<hr />

<p>まず場所の範囲が大きいのでクエリで聞かれる場所だけで座標圧縮する.</p>

<p>n個の台風を平方分割する.<br />
分割された部分までの台風の情報をまとめて累積で持つ.<br />
分割部分からはみ出た部分はナイーブに計算する.<br />
分割部分はBITで持つことにする.</p>

<p>TLE厳し目なうえ, 分割数によってはMLEも厳しいのでsegreeを使う場合は気をつける</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code JOI/2008/Typhoon.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JOI 春合宿 2008 Origami]]></title>
    <link href="http://algoogle.hadrori.jp/joi/sc2008origami/"/>
    <updated>2014-09-04T03:10:17+09:00</updated>
    <id>http://algoogle.hadrori.jp/joi/sc2008origami</id>
    <content type="html"><![CDATA[<p><a href="http://joisc2008.contest.atcoder.jp/tasks/joisc2008_origami">Origami</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>折り紙を重ねておいていくので, 一番かぶっている厚さとその面積を求めよ</p>

<h4 id="section-1">解法</h4>

<hr />

<p>座標圧縮っぽくやる.<br />
折り紙の幅と高さはそれぞれ高々20なので全ての位置をmapでカウントしても問題ない.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code JOI/2008/Origami.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 2430 Lazy Cows]]></title>
    <link href="http://algoogle.hadrori.jp/pku/2430/"/>
    <updated>2014-05-05T01:39:20+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/2430</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2430">Lazy Cows</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>2*B(&lt;=15,000,000)のセルにN(&lt;=1,000)頭の牛がいる. この牛全てをカバーするようにK(&lt;=N)個の四角形を作る.<br />
そのときの四角形の面積の総和の最小はいくらか.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>DPします.<br />
1段目と2段目に牛がいるのをbitで表現すると配列1本で考えられるので楽です.<br />
また, 牛の数がセルの横幅に対して小さいので位置を座圧します.</p>

<p>各列について, その列を四角形が覆うパターンは5通り.<br />
<img src="/images/poj2430-01.png" alt="poj2430-01" /><br />
この内一つも覆われていないパターンの列は座圧で牛がいる列を詰めるので存在しない.<br />
またこの事から左からセルをなめていくと, 各列は前の列の状態だけから更新されるようなDPを考えられる.<br />
dp[i][k][u] := i列目でk個四角形が存在して状態がuであるものの最小の面積<br />
状態というのは列の覆い方.</p>

<p>あとは場合分けを適当にする.<br />
前の状態から四角形を何個現在の状態につなげるのかを考えれば楽.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/2430.cpp %}</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 3666 Making the Grade]]></title>
    <link href="http://algoogle.hadrori.jp/pku/3666/"/>
    <updated>2014-05-05T01:34:57+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/3666</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3666">Making the Grade</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>dp[i][j] := i番目を高さj以上にするときの最小のコスト<br />
高さの種類は高々N個なので座圧する.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/3666.cpp %}</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1337 Count the Regions]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1337/"/>
    <updated>2014-05-05T01:32:50+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1337</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1337">Count the Regions</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>スカスカな入力なので座圧する.<br />
あとは個数が最大で50個なのでビットでその座標にかぶってるやつを持てばよい.<br />
最後に全部チェックするとき, かぶってるやつが同じになってる場所を-1で塗りつぶしていって数えていく.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1337.cpp %}</p>

]]></content>
  </entry>
  
</feed>
