<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: spanning-tree | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/spanning-tree/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ACM-ICPC Tokyo Regional 2014 F There is No Alternative]]></title>
    <link href="http://algoogle.hadrori.jp/icpc/icpc2014tokyof/"/>
    <updated>2014-10-24T03:06:44+09:00</updated>
    <id>http://algoogle.hadrori.jp/icpc/icpc2014tokyof</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/cdescription.jsp?cid=ICPCOOC2014&amp;pid=F">There is No Alternative</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>最小全域木を作るのに必ず必要になる辺の数とそのコストの和を求めよ</p>

<h4 id="section-1">解法</h4>

<hr />

<p>最小全域木を作ってみる.<br />
必ず必要な辺はそれに含まれる.<br />
あとはその辺それぞれを使わないで最小全域木を作り, 非連結か重さが増える場合必要.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code ICPC/2014/Tokyo/F.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JOI 春合宿 2011 Joitter]]></title>
    <link href="http://algoogle.hadrori.jp/joi/sc2011joitter/"/>
    <updated>2014-09-21T23:25:37+09:00</updated>
    <id>http://algoogle.hadrori.jp/joi/sc2011joitter</id>
    <content type="html"><![CDATA[<p><a href="http://joisc2011.contest.atcoder.jp/tasks/joisc2011_joitter">Joitter</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>SNSサービスJoitterでは投稿の公開範囲を友達のみ, 友達とその友達のみ, 全体の3つから選べる.<br />
また友達になるにはその組ごとに決まったコストがかかる.<br />
N人の公開範囲と互いの友達登録コストが与えられたとき, 最小で何回友達になれば全員が互いに投稿を見ることができるようになるか.<br />
またそのときの最小のコストを求めよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>問題自体は難しくないが, どのようなときに最適になるのか漏れ無くきちんと考察する必要がある.</p>

<p>友達関係のグラフを考える.<br />
まず公開範囲が距離1の人だけの人がいる場合, その人と他全員が友達にならなければならない.<br />
またこのとき互いは距離2以下に収まる連結なグラフになるので他の公開範囲については考えなくて良い.</p>

<p>公開範囲が距離2以下の人だけの人がいる場合, ある人を仲介にしてそこから他の人に辺を伸ばして木を作るのがほとんどの場合で最適.<br />
ただし公開範囲が距離2以下の人だけの人がちょうど2人のとき(他の人は全体に公開), この2人を中心として他の人をどちらかコストの小さい方に繋ぐのが最適になる.<br />
当然これらは連結なので全体に公開する人のことは考えなくて良い.</p>

<p>最後に公開範囲が全体の人だけの場合, 最小全域木を作るのが最適. これはprim法でやるのが楽で良い.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code JOI/2011/joitter.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JOI 春合宿 2010 Finals]]></title>
    <link href="http://algoogle.hadrori.jp/joi/sc2010finals/"/>
    <updated>2014-09-17T01:55:14+09:00</updated>
    <id>http://algoogle.hadrori.jp/joi/sc2010finals</id>
    <content type="html"><![CDATA[<p><a href="http://joisc2010.contest.atcoder.jp/tasks/joisc2010_finals">Finals</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>辺にコストのある無向グラフが与えられる.<br />
各頂点からK個の頂点を選んだとき, どの頂点もそのいずれかに到達できるように辺を選ぶ.<br />
使う辺のコストの和の最小を求めよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>Kruskal法で最小全域木を求める要領でやる.<br />
今回は全域木ではなくてK個の木からなる全域森を考えれば良い.<br />
コストの小さい辺から選んでコストを足していき, 連結成分がK個になったら終了</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code JOI/2010/finals.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1280 Slim Span]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1280/"/>
    <updated>2014-05-26T18:02:55+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1280</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1280">Slim Span</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>重さの下限を順に試す. それ以上の重さの辺を使った最小全域木をそれぞれ考える.<br />
その中で辺の重さが最大と最小の差が小さくなるものを選ぶ.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1280.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 3625 Building Roads]]></title>
    <link href="http://algoogle.hadrori.jp/pku/3625/"/>
    <updated>2014-05-05T01:03:03+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/3625</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3625">Building Roads</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>最小全域木つくるだけ.<br />
辺はN^2で作っちゃえばいい.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/3625.cpp %}</p>

]]></content>
  </entry>
  
</feed>
