<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: string | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/string/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codeforces 455B A Lot of Games]]></title>
    <link href="http://algoogle.hadrori.jp/codeforces/455b/"/>
    <updated>2014-08-09T03:26:38+09:00</updated>
    <id>http://algoogle.hadrori.jp/codeforces/455b</id>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/455/B">A Lot of Games</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>n個の文字列がある.<br />
2人のプレイヤーが交互に文字列の後ろに1文字追加する.<br />
ただし追加後の文字列はそれ以外の文字列のprefixになっていなければならない.<br />
最終的に追加できなくなったほうが負け.<br />
これを負けた方を先攻にしてk回繰り返す.<br />
最適な行動をとったとき, 勝つのは始め先攻だったほうか, 後攻だったほうか.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>まず与えられた文字列でTrie木を作る.<br />
Trie木の根が文字列が空の時に対応していて, そこから先にノードが存在するように辿れば題意の動きができる.<br />
あるノードの勝ち負けは, k=1で同じゲームをそのノードを根とする部分木での先攻の勝ち負けとする.</p>

<p>現在のノードから行けるノードが無いとき, そのノードは明らかに負け.<br />
行けるノードのうち1つでも負けなノードがあれば, そこに進めば現在のノードは勝てる.<br />
また, 行けるノードのうち1つでも勝ちノードがあれば, 現在のノードは負けることも可能.</p>

<p>kが奇数回で先攻が勝つことしか出来ない場合, 先攻の勝ち負け勝ち負け…負け勝ちとなるのは明らか.<br />
kが偶数階で先攻が負けることしか出来ない場合は負け負け負け…負けとなる.<br />
先攻が勝つことも負けることもできるとき, 最後から2番目のゲームまで負け続ければ最終回で先攻で勝てる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code Codeforces/455B.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2444 Substring]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2444/"/>
    <updated>2014-05-20T01:07:27+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2444</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2444">Substring</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>長さnの文字列sがあり, m個のクエリによって部分文字列の左端と右端の伸縮を行う.<br />
このとき生成される部分文字列の種類の数を答えよ.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>m, nが大きいのでナイーブに文字列を生成してsetに入れたりしていると時間もメモリも足りない.<br />
rolling-hash法で文字列を圧縮してO(1)で比較と生成を行えるようにすればよい.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2444.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PKU 3193 Cow Phrasebook]]></title>
    <link href="http://algoogle.hadrori.jp/pku/3193/"/>
    <updated>2014-05-15T16:07:38+09:00</updated>
    <id>http://algoogle.hadrori.jp/pku/3193</id>
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=3193">Cow Phrasebook</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>辞書と牛の言葉が与えられる.<br />
牛の言葉の中で, 辞書にある文字列の0文字目から牛の言葉の長さ分まで一致するものがある数はいくらか</p>

<h4 id="section-1">解法</h4>

<hr />

<p>トライ木を作ればいい.<br />
abc<br />
ade<br />
bcfg<br />
みたいな文字列があるとき, 図のような木をつくる.<br />
<img src="/images/pku3193-01.png" alt="pku3193-01" /><br />
rootから木を辿ってもし文字列の途中で辿れなくなったら一致するものはない.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code PKU/3193.cpp %}</p>
]]></content>
  </entry>
  
</feed>
