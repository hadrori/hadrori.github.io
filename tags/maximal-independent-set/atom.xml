<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: maximal-independent-set | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/maximal-independent-set/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-12-14T01:48:09+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2597 Color the Map Extreme]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2597/"/>
    <updated>2015-12-14T00:32:26+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2597</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2597">Color the Map Extreme</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>平面上にn(&lt;=35)個多角形がある．彩色数を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>幾何パートは辺同士で線分と点の距離が0になる個数と端点がくっついてるかでみてます．<br />
- 2個より多い: 辺がくっついてる
- 2個で端点がくっついてない: 辺がくっついてる
- それ以外: 辺がくっついてない</p>

<p>グラフができたら彩色数を求めます．<br />
まず大前提として，できたグラフは平面グラフなので彩色数は最大でも4なので，グラフから極大独立集合を取ってきてそこの色を決めたら残りの部分は3色以下で塗れます．<br />
極大独立集合とは互いに隣り合わない頂点の集合(独立集合)のうち，これ以上頂点を追加できないものです．<br />
残ったグラフでは頂点がなければ0色，辺がなければ1色，2部グラフなら2色，それ以外なら3色とわかるので適当に塗っていけば何色で塗れるかわかります．<br />
つまり極大独立集合を全列挙して試せばグラフの彩色数がわかります．<br />
極大独立集合は貪欲にやっていけば求まりますが，列挙する場合は最小次数の頂点かその隣接する頂点を選ぶかでやるといい感じになります．<br />
もうちょっとだけ詳しく書こうとしたけどわかりづらくなったので擬似コード．詳しくはコード見て下さい(チームのライブラリから取ってきたので僕が書いたわけではありませんが)．<br />
前提条件として，SとTは空，Vはグラフの頂点集合が入ってます．事後条件はTは全ての極大独立集合の集合．</p>

<p>&#8220;`
set: S, T, V</p>

<p>func f
  if Vが空 then
    TにSを追加
  else then
    v = Vにある頂点のうち最小次数の頂点1つ
    Vからvとその近傍を取り除く(1)
    Sにvを入れる
    call f
    Sからvを取り除く
    Vに(1)で取り除いた頂点を戻す
    for w in Vにある頂点のうちvに隣接する頂点
      Vからwとその近傍を取り除く(2)
      Sにwを入れる
      call f
      Sからwを取り除く
      Vに(2)で取り除いた頂点を戻す
    end
  end
end
&#8220;`</p>

<p>極大独立集合は最小の次数をkとしたとき <script type="math/tex">(k+1)^{\frac{n}{k+1}}</script> 個できる．これはk+1=eのとき最大になるが，kは整数なのでk+1=3の時が最大．<br />
1つの極大独立集合を見つけるのに <script type="math/tex">O(n)</script> なので，列挙の計算量は <script type="math/tex">n3^{\frac{n}{3}}</script>となる．<br />
ちなみにグラフによってはこのアルゴリズムは一部の極大独立集合を重複して列挙しますが，それを含めた計算量です．</p>

<p>極大独立集合を除いたグラフでの彩色数のチェックにはそれぞれ <script type="math/tex">O(n)</script> かかるので，全体の計算量も <script type="math/tex">O(n3^{\frac{n}{3}})</script> となる．<br />
35*3^(35/3)は10^7ぐらいなので間に合います．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>File /Users/hadrori/Programming/Web/octopress/source/downloads/code/AOJ/2597.cpp could not be found</p>
]]></content>
  </entry>
  
</feed>
