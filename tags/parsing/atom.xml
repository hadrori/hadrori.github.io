<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: parsing | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/parsing/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-07-30T15:13:28+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2328 Mobile Network]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2328/"/>
    <updated>2015-05-12T23:09:33+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2328</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2328">Mobile Network</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>容量がx&gt;=0で単調非減少なxについての多項式のグラフが与えられる． 
頂点1から頂点nへの最大流を求めよ．</p>

<h4 id="section-1">解法</h4>

<hr />

<p>多項式の比較は問題に書いてない気がするけどxが十分に大きな値をとったときの多項式の値で比較，つまり次数が大きい方から係数を比較して通った．<br />
あとはそれで最大流を求めるだけ．</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2328.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2435 Zero Division Checker]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2435/"/>
    <updated>2014-05-27T23:14:04+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2435</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2435">Zero Division Checker</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>各段階でとりうる値を配列で保持しておく.<br />
スタックにそれぞれの配列上の位置を積んでおいて, 演算の時に参照する.<br />
演算は256*256すべての場合を見ていく.<br />
2項ともとりうる値だったら計算結果をtrueにする.<br />
0で割る場合があったらerror</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2435.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1145 The Genome Database of All Space Life]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1145/"/>
    <updated>2014-05-26T22:44:28+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1145</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1145">The Genome Database of All Space Life</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>繰り返される部分が圧縮されている文字列が与えられる.<br />
その文字列を復元した時のi番目の文字を答えよ.<br />
ただし存在しない場合は’0’と答えること.</p>

<h4 id="section-1">解法</h4>

<hr />

<p>再帰で構文解析していく.<br />
数字があって, その繰り返しの中に答えがある場合, 繰り返しの頭から何番目にあるのか求めて改めてその繰り返しの仲を調べる.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1145.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 2529 Brainf*ck]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2529/"/>
    <updated>2014-05-26T18:27:40+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2529</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2529">Brainf*ck</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>メモリは広く取ってあるらしいが, 移動に1文字使うので適当な範囲でやるのがよい.<br />
奇数番目をwhileのカウント用, 偶数番目を文字の保存用にする.<br />
メモリの決めた範囲内の保存された文字で現在の文字に一番近いものを選んで移動する.<br />
メモリの値がその文字になるまで’+’または’-‘を出力する.<br />
そのとき大きな数になる時はwhileをつかう. サンプルみたいにやればよい.</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/2529.cpp %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ 1251 Pathological Paths]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/1251/"/>
    <updated>2014-05-26T18:16:05+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/1251</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1251">Pathological Paths</a></p>

<h4 id="section">問題概要</h4>

<hr />

<h4 id="section-1">解法</h4>

<hr />

<p>調べるパスの途中に知らないディレクトリがあったらnot found<br />
“..”とか”.”の処理をしてindex.htmlを適切につけたものが, 最初N個になかったらnot found<br />
それ以外で2つが一致したらyes<br />
それ以外はno</p>

<h4 id="section-2">コード</h4>

<hr />

<p>{% include_code AOJ/1251.cpp %}</p>
]]></content>
  </entry>
  
</feed>
