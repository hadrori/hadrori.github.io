<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: wavelet-matrix | Algoogle]]></title>
  <link href="http://algoogle.hadrori.jp/tags/wavelet-matrix/atom.xml" rel="self"/>
  <link href="http://algoogle.hadrori.jp/"/>
  <updated>2015-08-08T21:20:20+09:00</updated>
  <id>http://algoogle.hadrori.jp/</id>
  <author>
    <name><![CDATA[hadrori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ 2270 The L-th Number]]></title>
    <link href="http://algoogle.hadrori.jp/aoj/2270/"/>
    <updated>2015-08-08T20:06:20+09:00</updated>
    <id>http://algoogle.hadrori.jp/aoj/2270</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2270">The L-th Number</a></p>

<h4 id="section">問題概要</h4>

<hr />

<p>頂点に値が割り当てられてる木について以下のクエリQ個を捌け．</p>

<ul>
  <li>2頂点v,w間のパス上の頂点のうち，l番目に小さいものを出力</li>
</ul>

<h4 id="section-1">解法</h4>

<hr />

<p>全体の方針としては，wavelet行列で列にした木上の2区間(パスをLCAで2つに分割したもの)内のL番目の数字を求める．<br />
全体の計算量は最大値をMとして<script type="math/tex">O((Q+N)\log M)</script></p>

<p>適当な頂点を根にしてオイラーツアーして木の頂点の値を列にする．またこのときLCAの準備もしておく．<br />
このとき入る時の値の列pと出る時の値の列qを作る．<br />
p,qはpに0でない値が入っている位置はqでは0で，qに0でない値が入っている位置はpでは0になるようにする．<br />
例えばオイラーツアーしてできる頂点番号の列が
<code>
1 2 2 3 4 4 3 1
</code>
だとして，それぞれ値が頂点番号と同じだとしたら
<code>
p : 1 2 0 3 4 0 0 0
q : 0 0 2 0 0 4 3 1
</code>
となる．<br />
このpとqについてのwavelet行列を生成する．<br />
このp，qでパス上の頂点の値の出現回数がわかるようになる．同じ区間で見て，pで増えて，qで減るから．</p>

<p><script type="math/tex">u := LCA(v,w)</script>とする．<br />
オイラーツアーしてできた列は頂点b,とその祖先a間のパスを，<script type="math/tex">[in(a),in(b)]</script>と表現できる(途中のいらない部分木は頂点に入るのと出るので打ち消されてる)．<br />
ここで<script type="math/tex">in(a)</script>とは列上で頂点aに入る位置．<br />
あとはこうしてできた2区間<script type="math/tex">[in(u),in(v)], [in(u)+1,in(w)]</script>上でL番目に小さい値を求めればよい．<br />
あとは1つの区間でK番目に大きいものを求めるものを応用させればよい(詳しくはコードを参照してほしい)．<br />
ざっくり言うと，最上位bitからみて区間内で有効な値のうち1が立ってる数がLより大きいかどうかでwavelet行列の行上の区間を選んでいく．</p>

<h4 id="section-2">コード</h4>

<hr />

<p><figure class='code'><figcaption><span> (2270.cpp)</span> <a href='/downloads/code/AOJ/2270.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;bits/stdc++.h&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="cp">#define repi(i,a,b) for(int i = (int)(a); i &lt; (int)(b); i++)</span>
</span><span class='line'><span class="cp">#define rep(i,n) repi(i,0,n)</span>
</span><span class='line'>
</span><span class='line'><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">N</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">FID</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">bucket</span> <span class="o">=</span> <span class="mi">512</span><span class="p">,</span> <span class="n">block</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">char</span> <span class="n">popcount</span><span class="p">[];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">B</span><span class="p">[</span><span class="n">N</span><span class="o">/</span><span class="n">bucket</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">short</span> <span class="n">bs</span><span class="p">[</span><span class="n">N</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">b</span><span class="p">[</span><span class="n">N</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">FID</span><span class="p">(){}</span>
</span><span class='line'>    <span class="n">FID</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">s</span><span class="p">[])</span> <span class="o">:</span> <span class="n">n</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">popcount</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">block</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">popcount</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">__builtin_popcount</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">bs</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">B</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="n">block</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">bs</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="n">bucket</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">B</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">bucket</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">B</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">bucket</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">bs</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="p">]</span>   <span class="o">|=</span> <span class="kt">short</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="n">block</span><span class="p">);</span>
</span><span class='line'>            <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>  <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>            <span class="n">B</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">bucket</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">%</span><span class="n">bucket</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="n">b</span><span class="p">[</span><span class="n">n</span><span class="o">/</span><span class="n">block</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count</span><span class="p">(</span><span class="kt">bool</span> <span class="n">val</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">val</span><span class="o">?</span> <span class="n">B</span><span class="p">[</span><span class="n">r</span><span class="o">/</span><span class="n">bucket</span><span class="p">]</span><span class="o">+</span><span class="n">b</span><span class="p">[</span><span class="n">r</span><span class="o">/</span><span class="n">block</span><span class="p">]</span><span class="o">+</span><span class="n">popcount</span><span class="p">[</span><span class="n">bs</span><span class="p">[</span><span class="n">r</span><span class="o">/</span><span class="n">block</span><span class="p">]</span><span class="o">&amp;</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">r</span><span class="o">%</span><span class="n">block</span><span class="p">))</span><span class="o">-</span><span class="mi">1</span><span class="p">)]</span><span class="o">:</span> <span class="n">r</span><span class="o">-</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">r</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count</span><span class="p">(</span><span class="kt">bool</span> <span class="n">val</span><span class="p">,</span> <span class="kt">int</span> <span class="n">l</span><span class="p">,</span> <span class="kt">int</span> <span class="n">r</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">count</span><span class="p">(</span><span class="n">val</span><span class="p">,</span><span class="n">r</span><span class="p">)</span><span class="o">-</span><span class="n">count</span><span class="p">(</span><span class="n">val</span><span class="p">,</span><span class="n">l</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>    <span class="kt">bool</span> <span class="k">operator</span><span class="p">[](</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="n">bs</span><span class="p">[</span><span class="n">i</span><span class="o">/</span><span class="n">block</span><span class="p">]</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="n">block</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="k">template</span><span class="o">&lt;</span><span class="kt">int</span> <span class="n">N</span><span class="o">&gt;</span> <span class="kt">char</span> <span class="n">FID</span><span class="o">&lt;</span><span class="n">N</span><span class="o">&gt;::</span><span class="n">popcount</span><span class="p">[</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">FID</span><span class="o">&lt;</span><span class="n">N</span><span class="o">&gt;::</span><span class="n">block</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">T</span><span class="p">,</span> <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="kt">int</span> <span class="n">D</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">wavelet</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">zs</span><span class="p">[</span><span class="n">D</span><span class="p">];</span>
</span><span class='line'>    <span class="n">FID</span><span class="o">&lt;</span><span class="n">N</span><span class="o">&gt;</span> <span class="n">dat</span><span class="p">[</span><span class="n">D</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">wavelet</span><span class="p">(){}</span>
</span><span class='line'>    <span class="n">wavelet</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">T</span> <span class="n">seq</span><span class="p">[])</span> <span class="o">:</span> <span class="n">n</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">T</span> <span class="n">f</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">l</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">r</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">bool</span> <span class="n">b</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">seq</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">T</span><span class="p">)</span><span class="o">*</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="n">D</span><span class="p">;</span> <span class="n">d</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">lh</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">rh</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="kt">bool</span> <span class="n">k</span> <span class="o">=</span> <span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="n">D</span><span class="o">-</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="n">r</span><span class="p">[</span><span class="n">rh</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>                <span class="k">else</span> <span class="n">l</span><span class="p">[</span><span class="n">lh</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>                <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">]</span> <span class="o">=</span> <span class="n">FID</span><span class="o">&lt;</span><span class="n">N</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>            <span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">]</span> <span class="o">=</span> <span class="n">lh</span><span class="p">;</span>
</span><span class='line'>            <span class="n">swap</span><span class="p">(</span><span class="n">l</span><span class="p">,</span><span class="n">f</span><span class="p">);</span>
</span><span class='line'>            <span class="n">memcpy</span><span class="p">(</span><span class="n">f</span><span class="o">+</span><span class="n">lh</span><span class="p">,</span> <span class="n">r</span><span class="p">,</span> <span class="n">rh</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="n">T</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">100100</span><span class="p">,</span> <span class="n">D</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">wavelet</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">N</span><span class="p">,</span><span class="n">D</span><span class="o">&gt;</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">val</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">in</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">dep</span><span class="p">[</span><span class="n">N</span><span class="p">],</span> <span class="n">par</span><span class="p">[</span><span class="n">N</span><span class="p">][</span><span class="mi">20</span><span class="p">],</span> <span class="n">idx</span><span class="p">,</span> <span class="n">p</span><span class="p">[</span><span class="mi">2</span><span class="o">*</span><span class="n">N</span><span class="p">],</span> <span class="n">q</span><span class="p">[</span><span class="mi">2</span><span class="o">*</span><span class="n">N</span><span class="p">],</span> <span class="n">sz</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">G</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">euler_tour</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="o">~</span><span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="n">and</span> <span class="o">~</span><span class="n">par</span><span class="p">[</span><span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span><span class="p">]][</span><span class="n">k</span><span class="p">];</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">par</span><span class="p">[</span><span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">k</span><span class="p">]][</span><span class="n">k</span><span class="p">];</span>
</span><span class='line'>    <span class="n">p</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span><span class="p">[</span><span class="n">v</span><span class="p">];</span>
</span><span class='line'>    <span class="n">in</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="o">=</span> <span class="n">idx</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="nl">w</span><span class="p">:</span> <span class="n">G</span><span class="p">[</span><span class="n">v</span><span class="p">])</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">w</span> <span class="o">!=</span> <span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">par</span><span class="p">[</span><span class="n">w</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span><span class="p">;</span>
</span><span class='line'>            <span class="n">dep</span><span class="p">[</span><span class="n">w</span><span class="p">]</span> <span class="o">=</span> <span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="n">euler_tour</span><span class="p">(</span><span class="n">w</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="n">q</span><span class="p">[</span><span class="n">idx</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span><span class="p">[</span><span class="n">v</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">build</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">par</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">par</span><span class="p">));</span>
</span><span class='line'>    <span class="n">euler_tour</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">a</span> <span class="o">=</span> <span class="n">wavelet</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">N</span><span class="p">,</span><span class="n">D</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="n">b</span> <span class="o">=</span> <span class="n">wavelet</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">N</span><span class="p">,</span><span class="n">D</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">n</span><span class="p">,</span> <span class="n">q</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">lca</span><span class="p">(</span><span class="kt">int</span> <span class="n">u</span><span class="p">,</span> <span class="kt">int</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">dep</span><span class="p">[</span><span class="n">u</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">])</span> <span class="n">swap</span><span class="p">(</span><span class="n">u</span><span class="p">,</span><span class="n">v</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">dif</span> <span class="o">=</span> <span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="o">-</span> <span class="n">dep</span><span class="p">[</span><span class="n">u</span><span class="p">];</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">18</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">dif</span><span class="o">&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="n">i</span><span class="p">))</span> <span class="n">v</span> <span class="o">=</span> <span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">u</span> <span class="o">==</span> <span class="n">v</span><span class="p">)</span> <span class="k">return</span> <span class="n">u</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">17</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">par</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">i</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">u</span> <span class="o">=</span> <span class="n">par</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>            <span class="n">v</span> <span class="o">=</span> <span class="n">par</span><span class="p">[</span><span class="n">v</span><span class="p">][</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">par</span><span class="p">[</span><span class="n">u</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">query</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="kt">int</span> <span class="n">w</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">u</span> <span class="o">=</span> <span class="n">lca</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="n">w</span><span class="p">);</span>
</span><span class='line'>    <span class="n">k</span> <span class="o">=</span> <span class="n">dep</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="n">dep</span><span class="p">[</span><span class="n">w</span><span class="p">]</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">dep</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">-</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">lva</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">u</span><span class="p">],</span> <span class="n">lvb</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">u</span><span class="p">],</span>
</span><span class='line'>        <span class="n">rva</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">rvb</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">v</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="n">lwa</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">lwb</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">u</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="n">rwa</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">w</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">rwb</span> <span class="o">=</span> <span class="n">in</span><span class="p">[</span><span class="n">w</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ret</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="n">D</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">lvac</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">lva</span><span class="p">),</span> <span class="n">lvbc</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">lvb</span><span class="p">),</span>
</span><span class='line'>            <span class="n">rvac</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">rva</span><span class="p">),</span> <span class="n">rvbc</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">rvb</span><span class="p">),</span>
</span><span class='line'>            <span class="n">lwac</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">lwa</span><span class="p">),</span> <span class="n">lwbc</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">lwb</span><span class="p">),</span>
</span><span class='line'>            <span class="n">rwac</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">rwa</span><span class="p">),</span> <span class="n">rwbc</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">dat</span><span class="p">[</span><span class="n">d</span><span class="p">].</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">rwb</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">lc</span> <span class="o">=</span> <span class="n">lvac</span><span class="o">-</span><span class="n">lvbc</span><span class="o">+</span><span class="n">lwac</span><span class="o">-</span><span class="n">lwbc</span><span class="p">,</span>
</span><span class='line'>            <span class="n">rc</span> <span class="o">=</span> <span class="n">rvac</span><span class="o">-</span><span class="n">rvbc</span><span class="o">+</span><span class="n">rwac</span><span class="o">-</span><span class="n">rwbc</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">rc</span><span class="o">-</span><span class="n">lc</span> <span class="o">&gt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">lva</span> <span class="o">=</span> <span class="n">lvac</span><span class="o">+</span><span class="n">a</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span> <span class="n">lvb</span> <span class="o">=</span> <span class="n">lvbc</span><span class="o">+</span><span class="n">b</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span>
</span><span class='line'>            <span class="n">rva</span> <span class="o">=</span> <span class="n">rvac</span><span class="o">+</span><span class="n">a</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span> <span class="n">rvb</span> <span class="o">=</span> <span class="n">rvbc</span><span class="o">+</span><span class="n">b</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span>
</span><span class='line'>            <span class="n">lwa</span> <span class="o">=</span> <span class="n">lwac</span><span class="o">+</span><span class="n">a</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span> <span class="n">lwb</span> <span class="o">=</span> <span class="n">lwbc</span><span class="o">+</span><span class="n">b</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span>
</span><span class='line'>            <span class="n">rwa</span> <span class="o">=</span> <span class="n">rwac</span><span class="o">+</span><span class="n">a</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span> <span class="n">rwb</span> <span class="o">=</span> <span class="n">rwbc</span><span class="o">+</span><span class="n">b</span><span class="p">.</span><span class="n">zs</span><span class="p">[</span><span class="n">d</span><span class="p">];</span>
</span><span class='line'>            <span class="n">ret</span> <span class="o">|=</span> <span class="mi">1ULL</span><span class="o">&lt;&lt;</span><span class="p">(</span><span class="n">D</span><span class="o">-</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">k</span> <span class="o">-=</span> <span class="n">rc</span><span class="o">-</span><span class="n">lc</span><span class="p">;</span>
</span><span class='line'>            <span class="n">lva</span> <span class="o">-=</span> <span class="n">lvac</span><span class="p">;</span> <span class="n">lvb</span> <span class="o">-=</span> <span class="n">lvbc</span><span class="p">;</span>
</span><span class='line'>            <span class="n">rva</span> <span class="o">-=</span> <span class="n">rvac</span><span class="p">;</span> <span class="n">rvb</span> <span class="o">-=</span> <span class="n">rvbc</span><span class="p">;</span>
</span><span class='line'>            <span class="n">lwa</span> <span class="o">-=</span> <span class="n">lwac</span><span class="p">;</span> <span class="n">lwb</span> <span class="o">-=</span> <span class="n">lwbc</span><span class="p">;</span>
</span><span class='line'>            <span class="n">rwa</span> <span class="o">-=</span> <span class="n">rwac</span><span class="p">;</span> <span class="n">rwb</span> <span class="o">-=</span> <span class="n">rwbc</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">build</span><span class="p">();</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">m</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">v</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">v</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">w</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">l</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">query</span><span class="p">(</span><span class="n">v</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">w</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">l</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">input</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">val</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>    <span class="n">rep</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">;</span> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>        <span class="n">a</span><span class="o">--</span><span class="p">;</span> <span class="n">b</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>        <span class="n">G</span><span class="p">[</span><span class="n">a</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>        <span class="n">G</span><span class="p">[</span><span class="n">b</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">input</span><span class="p">();</span>
</span><span class='line'>    <span class="n">solve</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
